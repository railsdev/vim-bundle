class ConsumerCompliancesController < ApplicationController

  before_filter :set_templates

  def set_templates
    @templates = Template.all.map { |c| [c.name, c.id] }
  end

  def index
  	add_breadcrumb "<span>Consumer Compliance</span>".html_safe, consumer_compliances_path, :title => "Consumer Compliance"
  	if current_provider.provider_role == PROVIDER_ROLE_MEDICATOR_MESSANGER && current_provider.parent_provider_id == nil
  		@consumers = current_provider.get_consumers.page(params[:page]).per(10)
  	else
  		@consumers = current_provider.consumers.page(params[:page]).per(10)
  	end
  	# @month = 
  	# @year = DateTime.now.year
  	@time = DateTime.new(DateTime.now.year, DateTime.now.month).to_time
  	# @consumer.each do |consumer|
  	# 	@compliance << get_monthly_report(consumer, month, year)
  	# end
  end


  def prev_month
  	if current_provider.provider_role == PROVIDER_ROLE_MEDICATOR_MESSANGER && current_provider.parent_provider_id == nil
  		@consumers = current_provider.get_consumers.page(params[:page]).per(10)
  	else
  		@consumers = current_provider.consumers.page(params[:page]).per(10)
  	end
  	# binding.pry
  	time = params[:time].to_time
  	# binding.pry
  	@time = time - 1.month

  	render :partial => 'compliance_table'
  end

  def next_month
  	if current_provider.provider_role == PROVIDER_ROLE_MEDICATOR_MESSANGER && current_provider.parent_provider_id == nil
  		@consumers = current_provider.get_consumers.page(params[:page]).per(10)
  	else
  		@consumers = current_provider.consumers.page(params[:page]).per(10)
  	end
  	# binding.pry
  	time = params[:time].to_time
  	# binding.pry
  	@time = time + 1.month

  	render :partial => 'compliance_table'
  end

end
