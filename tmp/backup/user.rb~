# == Schema Information
#
# Table name: users
#
#  id                     :integer          not null, primary key
#  email                  :string(255)      default(""), not null
#  encrypted_password     :string(255)      default(""), not null
#  reset_password_token   :string(255)
#  reset_password_sent_at :datetime
#  remember_created_at    :datetime
#  sign_in_count          :integer          default(0), not null
#  current_sign_in_at     :datetime
#  last_sign_in_at        :datetime
#  current_sign_in_ip     :string(255)
#  last_sign_in_ip        :string(255)
#  created_at             :datetime
#  updated_at             :datetime
#  name                   :string(255)
#  profile_pic            :string(255)
#  phone                  :string(255)
#  type                   :string(255)
#  privilege_id           :integer
#  status                 :string(255)
#

class User < ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable
   

   # scope :find_roles, ->{ where(:user_type => 0) }
   # ROLES = User.find_roles.map{|p| p.email}

# ROLES =  User.find_roles.map(&:email)

#This Line we are adding for entering Role type fied as integer
 #  def roles=(roles)
 #   self.roles_mask = (roles & ROLES).map { |r| 2**ROLES.index(r) }.inject(0, :+)
 #  end

 #  def roles
 #   ROLES.reject do |r|
 #    ((roles_mask.to_i || 0) & 2**ROLES.index(r)).zero?
 #  end
 # end

end
