require 'sidekiq/web'
Pillphone::Application.routes.draw do
  root 'providers/consumers#index'
  devise_for :providers, :path_names => { :sign_in => 'login', :sign_out => 'logout', :sign_up => 'register' }, :controllers => { :registrations => "registrations", :sessions => "sessions" }
  devise_scope :provider do
    get '/providers/logout' => 'devise/sessions#destroy'
  end

  get "dashboard/index"
  get "consumer_compliances/index"
  get "consumers/index"
  # The priority is based upon order of creation: first created -> highest priority.
  # See how all your routes lay out with "rake routes".
  get "/404" => "api/errors#not_found"
  get "/500" => "api/errors#exception"

  namespace :api do
    resources :consumers do
      collection do
        post 'consumer_registration'
        post 'consumer_login'
        post 'consumer_logout'
        post 'consumer_passcode_login'
        post 'consumer_update_profile'
        post 'update_timezone'
        get 'get_consumer_profile'
        get 'get_care_providers'
        post 'add_care_provider'
        post 'remove_care_provider'
      end
   end
   resources :medications do
      collection do
        post 'get_my_med'
        # post 'get_drug_details'
        post 'get_product_details'
        post 'add_my_med'
        post 'delete_my_med'
        post 'consumer_medication_image_upload'
      end

    end
    resources :reminders, only: [:create, :index, :show, :update] do
      put '' => 'reminders#update', on: :collection
      get 'get_todays_reminders',   on: :collection
    end
    resources :site_contents do
      collection do
        post 'get_credits'
        post 'get_about_us'
        post 'get_terms_and_conditions'
      end
    end

    resources :contents, :except => [:index,:show,:create,:update,:edit] do   
      collection do
        post "terms_of_use", "credits", "about_us"
      end
    end

    # resources :reminders, only: [:create, :index, :show, :update]
    # resources :site_contents do
    #   collection do
    #     get 'get_credits'
    #     get 'get_about_us'
    #     get 'get_terms_and_conditions'
    #   end
    # end

    resources :consumer_settings do
      collection do
        post 'get_settings'
        post 'update_settings'
        post 'consumer_image_upload'
        post 'consumer_image_download'
        post 'image_upload'
      end
    end

    resources :dosage_diaries do
      collection do
        get 'get_dosage_diary'
        post 'dosage_diary_list'
        post 'dosage_diary_remove_user'
      end
    end

    resources :care_givers do
      collection do
        post 'add_care_giver'
        post 'get_care_giver'
        post 'remove_care_giver'
        get "caregiver_response"
      end
    end

    # resources :drugs do   
    #   collection do
    #     get 'get_drug_list'
    #     get 'get_drug_icon'
    #     post 'get_drug_details'
    #   end
    # end

    resources :products do   
      collection do
        get 'get_product_list'
        get 'get_product_icon'
        post 'get_product_details'
      end
    end

  end #end of api namespace

  resources :consumer_compliances do
    collection do
      post 'prev_month'
      post 'next_month'
      get 'download_pdf'
    end
  end

  #resources :providers do
  #    collection do
  # get 'consumers'
  # post 'select_task'
  # post 'delete_consumers'
  # post 'delete_consumer'
  #    end
  #  end
  # resources :providers do
  #   collection do
  # get 'consumers'
  # post 'provider_action'
  # get :support_users
  # get :messages
  #   end
  # end

  namespace :providers do
    root :to => "consumers#index"
    resources :consumers do
      get :consumers , :on => :collection
      post :select_task , :on => :collection
      post :delete_consumers , :on => :collection
      post :delete_consumer , :on => :collection
      get :dosage_diary, :on => :collection
      # get :view_medication, :on => :collection
      get :compose, :on => :collection
      post :send_message, :on => :collection
      post :compose_message_fields, :on => :collection  
      # get :add_pill_to_consumer, :on=> :collection
      get "medications/add_pill_to_consumer", :to => "consumers#add_pill_to_consumer"
      #post :save_custom_med, :on=> :collection
      post "medications/save_custom_med", :to => "consumers#save_custom_med"
      post :add_multiple_pill_to_consumer, :on=> :collection
      post :send_download_link, :on => :collection
      get :new_custom_med, :on=> :collection
      get "medications/add_medication", :to => "consumers#add_medication"
      get "medications/:medication_id", :to => "consumers#view_medication"
      get :medications, :to => "consumers#medications"
      get :verify_file_size, :on => :collection
      get 'download_pdf', :on => :collection
      #get :search_medication, :on => :collection
      get 'reminders'
      post :edit_reminder, :on => :collection    
      get :delete_reminder, :on => :collection  
      post :new_reminder, :on => :collection  
      post :create_reminder, :on => :collection  
      put 'update_reminder', :on => :collection  
      get :render_reminder_fields, :on => :collection 
      post 'delete_reminders', :on => :collection
      post 'prev_month', :on => :collection
      post 'next_month', :on => :collection
    end

    resources :support_users do
      post :remove_support_user, :on => :collection
      post :set_support_user_status, :on => :collection
      post :set_support_user_role, :on => :collection
      # get :search_users, :on => :collection
    end

    resources :messages

    # CONSUMER DEVICE APIs(intermidiate through IWSINC) for his MEDICATIONS & REMINDERS which change by PROVIDER
    namespace :provider_api do
      resources :consumers do
        post :add_medication, to: "consumers#add_medication"
        post :remove_medication, to: "consumers#add_medication"
        get :consumer_response, to: "consumers#consumer_response"
        post :send_template, on: :collection
      end 
    end
  end

  # get "/providers" => "providers#customers"
  # resources :providers do
  #   get :support_users, :on => :collection
  # end

  namespace :admin do
    get '/' => 'admin_operations#login'
    resources :admin_operations, :except => [:index,:show,:create,:update,:edit] do   
      collection do
        get 'login'
        get 'dashboard'
        get "logout"
        post 'check_login'
      end
    end

    resources :statistics, :except => [:index,:show,:create,:update,:edit] do   
      collection do
        get "dashboard"
        get "compliance_and_medication"
        get "users"
        get "filter_by_month"
        get "generate_report"
        get "paginate_compliance_medication"
      end
    end

    resources :manage, :except => [:index,:show,:create,:update,:edit] do   
      collection do
        get "dashboard"
        get "manage_providers"
        get "configurable_parameters"
        get "save_configurable_parameters"
        post "approve_provider"
        get "search_provider"
        get "inactive_providers"
        post "set_inactive"
      end
    end

    resources :content_management, :except => [:index,:show,:create,:update,:edit] do   
      collection do
        get "dashboard","credits", "about_us", "terms_of_use"         
        post "save_terms_of_use","save_about_us", "save_credits"
      end
    end

  end

  # namespace :admin do
  #   get '/' => 'users#index'
  #   resources :users
  # end

  mount Sidekiq::Web, at: "/sidekiq"
end
