class Admin::StatisticsController < Admin::AdminController
  before_filter :set_initial_breadcrumbs, :only => [:dashboard, :compliance_and_medication,:users,:generate_report]

  def dashboard; end

  def compliance_and_medication
    @paginate_date     = {:prev => (DateTime.now - 1.month),:month => DateTime.now,:next => ""}
    beginning_of_month = DateTime.new(DateTime.now.year, DateTime.now.month, 1 )
    end_of_month       = DateTime.new(DateTime.now.year, DateTime.now.month, -1 )
    @products          = Product.percentage_compliances(beginning_of_month,end_of_month).page(1).per(30)

    add_breadcrumb "Compliance and Medication", compliance_and_medication_admin_statistics_path, :title => "Compliance and Medication"
  end

  def paginate_compliance_medication
    @paginate_date     = {:month => params[:month].to_datetime}
    beginning_of_month = DateTime.new(@paginate_date[:month].year, @paginate_date[:month].month, 1 )
    end_of_month       = DateTime.new(@paginate_date[:month].year, @paginate_date[:month].month, -1 )
    @products          = Product.percentage_compliances(beginning_of_month,end_of_month).page(params[:page]).per(30)
  end

  def filter_by_month    
    if params[:prev]
      @paginate_date = { :prev => (params[:prev].to_datetime - 1.month), :month => params[:prev].to_datetime, :next => (params[:prev].to_datetime + 1.month) }
      search_date    = params[:prev].to_datetime
    else
      @paginate_date = {:prev => (params[:next].to_datetime - 1.month), :month => params[:next].to_datetime, :next => ((((params[:next].to_datetime + 1.month) <=> DateTime.now) < 0)? params[:next].to_datetime + 1.month : "")}
      search_date    = params[:next].to_datetime
    end
    beginning_of_month = DateTime.new(search_date.year, search_date.month, 1 )
    end_of_month       = DateTime.new(search_date.year, search_date.month, -1 )
    @products          = Product.percentage_compliances(beginning_of_month,end_of_month).page(1).per(30)
  end

  def users    
    add_breadcrumb "Users", users_admin_statistics_path,:title => "Users"
  end

  def generate_report
    begin      
      params_string = {:from_date => "created_at >= ?", :to_date => "created_at <= ?", :status => "status = ?", :devices => "devices = ?"}
      result_param  = ''
      params_string.each do |key,value|
        if params[key].present?
          params_key    = (["from_date","to_date"].include?(key.to_s))? params[key].to_datetime.to_s : params[key].to_s
          result_param += ".where('"+value+"',"+params_key.to_keyword+")"
        end
      end
      users_report    = eval(Consumer.to_s+result_param)
      @consumers_grid = initialize_grid(users_report)
      @users_report   = {"Android" => users_report.android.length,"IOS" => users_report.ios.length}
      add_breadcrumb "Users", "",:title => "Users"
    rescue Exception => e
      puts "caught exception #{e}! ohnoes!"
      redirect_to users_admin_statistics_path
    end  
  end

  private

  def set_initial_breadcrumbs
    add_breadcrumb "Dashboard", dashboard_admin_admin_operations_path,:title => "Dashboard"
    add_breadcrumb "Statistics", "",:title => "Statistics"
  end

end
