# == Schema Information
#
# Table name: drugs
#
#  id              :integer          not null, primary key
#  drug_name_long  :string(255)
#  drug_name_short :string(255)
#  generic_name    :string(255)
#  is_active       :string(255)
#  added_from      :boolean
#  product_link    :string(255)
#  fda_form_id     :integer
#  created_at      :datetime
#  updated_at      :datetime
#

class Drug < ActiveRecord::Base
  extend Calculations

  belongs_to :fda_form
  has_many :drug_patient_educations
  has_one :patient_education, through: :drug_patient_educations
  has_one :drugs_patient_education
  has_one :drug_image
  has_many :consumer_medications, as: :consumer_drug, dependent: :destroy
  has_many :consumers, through: :consumer_medications, as: :consumer_drug
  has_many :consumer_compliances,through: :consumer_medications
  has_one :drug_attribute, dependent: :destroy
  has_many :drug_ingredients

  def prescribed_for
    prescribed_for = []
    prescribed_for << self.try(:drugs_patient_education).try(:patient_education).try(:descr)
    prescribed_for << self.try(:drugs_patient_education).try(:patient_education).try(:contra)
    prescribed_for << self.try(:drugs_patient_education).try(:patient_education).try(:admin)
    prescribed_for << self.try(:drugs_patient_education).try(:patient_education).try(:missed)
    prescribed_for.compact.join("")
  end  

  def self.search_drug keyword, pg
    @drugs = Drug.search("*"+keyword.to_s+"*",:conditions => {:is_active => "1"}, :page => pg, :per_page => PER_PAGE_RECORDS)
  end
end
